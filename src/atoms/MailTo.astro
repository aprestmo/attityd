---
interface Props {
  email: string;
}

const { email } = Astro.props as Props;
---
<attityd-mailto>
  <a href=`mailto:${email}`>{email}</a>
</attityd-mailto>

<script>
 customElements.define('attityd-mailto', class extends HTMLElement {

constructor() {
  super();

  // this.attachShadow({ mode: 'open' });
  // this.shadowRoot.innerHTML = `
  //   <style>
  //     a {
  //       --state: hidden;
  //     }
  //     .is-active {
  //       --state: visible;
  //     }
  //   </style>
  // `;

  this.link = this.querySelector('a');
  this.link.addEventListener('click', this);
}

async handleEvent(event) {
  if (event.type === 'click') {
    event.preventDefault();
    var currentTarget = event.currentTarget;
    currentTarget.insertAdjacentHTML(
      'beforeend',
      '<span>Kopiert til utklippstavlen</span>'
    );

    if (!navigator.clipboard) {
      return;
    }

    var text = this.textContent;

    try {
      if (text) {
        await navigator.clipboard.writeText(text);
        var target = event.target;
        target.classList.add('is-active');
        target.style.setProperty('--state', 'visible');
        setTimeout(() => {
          target.classList.remove('is-active');
          var span = target.querySelector('span');
          if (span) {
            span.remove();
          }
          setTimeout(() => {
            target.style.setProperty('--state', 'hidden');
          }, 1000);
        }, 30000);
      }
    } catch (err) {
      console.error('Kunne ikke kopiere!', err);
    }
  }
}
});
</script>
